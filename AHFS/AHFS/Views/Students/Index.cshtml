@model IEnumerable<AHFS.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<input type="text" id="searchInput" onkeyup="searchTable()" placeholder="Search for information...">

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNr)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Class)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Group)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subgroup)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Scholarship)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FinalGrade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Faculty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sex)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CNP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.YearOfStudy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Semester)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Class)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Group)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subgroup)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scholarship)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinalGrade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Faculty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Sex)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CNP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearOfStudy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Semester)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.Id)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.StudentId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        function searchTable() {
            // Declare variables
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.querySelector(".table");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows
            for (i = 0; i < tr.length; i++) {
                var found = false; // Flag to track if search query is found in any cell of the row

                // Loop through all table cells
                for (j = 0; j < tr[i].cells.length; j++) {
                    td = tr[i].cells[j];
                    if (td) {
                        txtValue = td.textContent || td.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            // If any cell contains the search query, set found flag to true and exit the loop
                            found = true;
                            break;
                        }
                    }
                }

                // Show or hide the row based on whether search query is found in any cell
                if (found) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    </script>
}
